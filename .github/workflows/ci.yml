# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI

on:
  push:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: maven
      - name: Run tests with Maven
        working-directory: userservice
        run: mvn -B test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file userservice/pom.xml

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        run: |
          cd userservice
          mvn com.github.ferstl:depgraph-maven-plugin:4.0.1:graph

      - name: Build and Push Docker Image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: kinzasdoji66/userservice
          tags: latest,${{ github.sha }}
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          dockerfile: userservice/Dockerfile
          directory: userservice

  # deploy:
  #   needs: [test, build]
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Deploy to production
  #       uses: johnbeynon/render-deploy-action@v0.0.8
  #       with:
  #         service-id: ${{ secrets.RENDER_SERVICE_ID }}
  #         api-key: ${{ secrets.RENDER_API_KEY }}
